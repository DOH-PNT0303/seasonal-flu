include: "Snakefile_WHO"
resolutions = ['2y']
lineages = ['h3n2', 'h1n1pdm', 'vic', 'yam']
segments = ['ha', 'na']
centers = ['cdc', 'who', 'vidrl', 'crick', 'niid']
assays = ['hi', 'fra']
passages = ['cell', 'egg']



def rare_mutations_to_plot(v):
    mutations = {('h1n1pdm', 'ha'):["HA1:209M", "HA2:147A"],
                 ('h3n2', 'ha'):["HA1:192F"],
                 ('vic', 'ha'):["HA1:126K", "HA1:128K", "HA1:197D"],
                  }
    return mutations[(v.lineage, v.segment)]

def mutations_to_plot(v):
    return config["mutations_to_plot"][v.lineage][v.segment]

def clades_to_plot(v):
    return config["clades_to_plot"][v.lineage][v.segment]

def get_extra_muts(w):
    return config["extra_mutations_for_titer_matrix"][w.lineage]

regions_to_graph = config["regions_to_graph"]

rule figures:
    input:
        expand("figures/mutation_frequencies_{lineage}_{segment}_{resolution}.pdf", segment=segments, lineage=lineages, resolution=resolutions),
        expand("figures/clade-frequencies_{lineage}_ha_{resolution}.pdf", lineage=lineages, resolution=resolutions),
        expand("figures/age-distribution_{lineage}_{resolution}.pdf", lineage=lineages, resolution=resolutions),
        expand("figures/titer_matrix_{center}_{lineage}_ha_{resolution}_{passage}_{assay}.pdf",
                lineage=lineages, resolution=['2y'], center=centers, passage=passages, assay=assays)


rule mutation_frequency_graphs:
    input:
        mutations = "results/flu_cdc_{lineage}_{segment}_{resolution}_cell_hi_frequencies.json"
    params:
        mutations = mutations_to_plot,
        regions = regions_to_graph,
    output:
        mutations = "figures/mutation_frequencies_{lineage}_{segment}_{resolution}.pdf",
        total_counts = "figures/total-sample-count_{lineage}_{segment}_{resolution}.pdf",
    shell:
        """
        python3 scripts/graph_frequencies.py --mutation-frequencies {input.mutations} \
                                            --mutations {params.mutations} \
                                            --regions {params.regions:q} \
                                            --output-mutations {output.mutations} \
                                            --output-total-counts {output.total_counts} \
        """

rule rare_mutation_frequency_graphs:
    input:
        mutations = "results/flu_cdc_{lineage}_{segment}_{resolution}_cell_hi_frequencies.json"
    params:
        mutations = rare_mutations_to_plot,
        regions = regions_to_graph,
    output:
        mutations = "figures/rare_mutation_frequencies_{lineage}_{segment}_{resolution}.pdf"
    shell:
        """
        python3 scripts/graph_frequencies.py --mutation-frequencies {input.mutations} \
                                            --mutations {params.mutations} \
                                            --regions {params.regions:q} \
                                            --output-mutations {output.mutations} \
                                            --rare-mutations
        """

rule clade_frequency_graphs:
    input:
        tree = "results/tree-frequencies_cdc_{lineage}_{segment}_{resolution}_cell_hi.json",
        clades = "results/clades_cdc_{lineage}_{segment}_{resolution}_cell_hi.json"
    params:
        regions = regions_to_graph,
        clades = clades_to_plot,
    output:
        tree_counts = "figures/tree-sample-count_{lineage}_{segment}_{resolution}.pdf",
        clades = "figures/clade-frequencies_{lineage}_{segment}_{resolution}.pdf"
    shell:
        """
        python3 scripts/graph_frequencies.py --tree-frequencies {input.tree} \
                                            --clade-annotation {input.clades} \
                                            --clades {params.clades} \
                                            --regions {params.regions:q} \
                                            --output-clades {output.clades} \
                                            --output-tree-counts {output.tree_counts}
        """


rule mutation_statistics:
    input:
        mutations = rules.complete_mutation_frequencies_by_region.output.mut_freq,
        node_data = rules.translate.output.node_data
    params:
        offset = 4,
        n_out=20
    output:
        rising = "results/rising_mutations_{region}_{lineage}_{segment}_{resolution}.txt",
        recurring_mut = "results/recurring_mutations_{region}_{lineage}_{segment}_{resolution}.txt",
        recurring_pos = "results/recurring_positions_{region}_{lineage}_{segment}_{resolution}.txt"
    run:
        from scripts.mutation_statistics import rising_mutations, recurring_mutations
        rising_mutations(input.mutations, offset=params.offset, fname=output.rising, n_out=params.n_out)

        recurring_mutations(input.node_data, fname_by_position=output.recurring_pos, fname_by_mutation=output.recurring_mut, n_out=params.n_out)


rule age_distributions:
    input:
        metadata = "results/metadata_{lineage}_ha.tsv",
        exclude = files.outliers
    params:
        resolution="{resolution}"
    output:
        "figures/age-distribution_{lineage}_{resolution}.pdf"
    shell:
        """
        python3 scripts/age_distributions.py  --metadata {input.metadata} \
                                             --resolution {params.resolution} \
                                             --exclude {input.exclude} \
                                             --output {output}
        """

rule titer_matrix:
    input:
        titers = "auspice-who/flu_{center}_{lineage}_{segment}_{resolution}_{passage}_{assay}_titers.json",
        model = "auspice-who/flu_{center}_{lineage}_{segment}_{resolution}_{passage}_{assay}_titer-sub-model.json",
        clades = "results/clades_{center}_{lineage}_{segment}_{resolution}_{passage}_{assay}.json",
	aaseq = "results/aa-seq_{center}_{lineage}_{segment}_{resolution}_{passage}_{assay}_HA1.fasta",
        metadata = "results/metadata_{lineage}_ha.tsv"
    output:
        "figures/titer_matrix_{center}_{lineage}_{segment}_{resolution}_{passage}_{assay}.pdf"
    params:
        exclude_extra_muts = get_extra_muts
    shell:
        '''
        python3 scripts/plot_titer_matrices.py --metadata {input.metadata} \
                                               --titers {input.titers} \
					       --aaseq {input.aaseq} \
					       --exclude-extra-muts {params.exclude_extra_muts} \
                                               --model {input.model} \
                                               --clades {input.clades} \
                                               --output {output}
        '''
